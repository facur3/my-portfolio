---
import  SpeedInsights  from "@vercel/speed-insights/astro"
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '@fontsource-variable/onest';
const { title } = Astro.props;
---
<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>

    <!-- SEO Meta Tags -->
    <meta name="description" content="Portfolio de Facu Rossi â€“ Desarrollador y programador especializado en soluciones modernas, AI, Web Development, y Full-stack Systems." />
    <meta name="keywords" content="Facu Rossi, Portfolio, Desarrollador, Programador, AI, Web, Full-stack" />

    <!-- Speed Insights -->
    <SpeedInsights/>

    <!-- Open Graph / Facebook -->
    <meta property="og:title" content="Facu Rossi - Portfolio" />
    <meta property="og:description" content="Descubre los proyectos y habilidades de Facu Rossi. Especializado en soluciones modernas, inteligencia artificial y desarrollo full-stack." />
    <meta property="og:image" content="/social-share.png" />
    <meta property="og:url" content="https://my-portfolio-seven-gules-67.vercel.app/" />
    <meta property="og:type" content="website" />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="Facu Rossi - Portfolio" />
    <meta name="twitter:description" content="Descubre los proyectos y habilidades de Facu Rossi. Especializado en soluciones modernas, inteligencia artificial y desarrollo full-stack." />
    <meta name="twitter:image" content="/social-share.png" />

    <!-- Favicon and Web Manifest -->
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />

    <!-- Dark Theme Initialization Script -->
    <script is:inline>
      (function() {
        const savedTheme = localStorage.getItem('theme') || 'system';
        const systemDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        if (savedTheme === 'dark' || (savedTheme === 'system' && systemDark)) {
          document.documentElement.classList.add('dark');
        }
      })();
    </script>
    
    <script is:inline type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "Person",
        "name": "Facundo Rossi",
        "jobTitle": "Analista de Sistemas",
        "url": "https://my-portfolio-seven-gules-67.vercel.app/",
        "sameAs": [
          "https://www.linkedin.com/in/facu-rossi-a5839a278/",
          "https://github.com/facur3"
        ],
        "alumniOf": {
          "@type": "EducationalOrganization",
          "name": "Universidad de Buenos Aires"
        },
        "hasOccupation": {
          "@type": "Occupation",
          "name": "Software Developer",
          "skills": ["JavaScript", "Python", "React", "AI", "Astro", "Tailwind CSS"]
        }
      }
    </script>
  </head>
  <body class="text-zinc-800 dark:text-zinc-100 bg-zinc-50 dark:bg-[#111]">
    <!-- Background Layers -->
    <div class="fixed inset-0 -z-50 bg-zinc-50 dark:hidden"></div>
    <div class="fixed inset-0 -z-50 bg-[#111] hidden dark:block"></div>

    <!-- Header Component -->
    <Header />

    <!-- Main Content -->
    <main class="max-w-3xl mx-auto px-4 py-24 w-full">
      <div class="w-full">
        <slot />
      </div>
    </main>

    <Footer />

    <!-- Dynamic Favicon Script -->
    <script is:inline>
      const favicon = document.querySelector('link[rel="icon"]');
      const updateFavicon = () => {
        const isDark = document.documentElement.classList.contains('dark');
        if (favicon) {
          favicon.href = isDark ? '/favicon-dark.svg' : '/favicon-light.svg';
        }
      };

      // Run on initial load
      updateFavicon();

      // Create an observer to watch for class changes on the html element
      const observer = new MutationObserver((mutations) => {
        mutations.forEach((mutation) => {
          if (mutation.attributeName === 'class') {
            updateFavicon();
          }
        });
      });

      // Start observing
      observer.observe(document.documentElement, { attributes: true });
    </script>
  </body>
</html>

<style>
  :root {
    color-scheme: light dark;
  }
  html {
    font-family: 'Onest Variable', system-ui, sans-serif;
    height: 100%;
    scroll-behavior: smooth;
  }
  body {
    min-height: 100vh;
    transition: background 0.3s ease, color 0.3s ease;
  }
</style>
