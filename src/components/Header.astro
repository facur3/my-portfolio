---
import ThemeToggle from "./ThemeToggle.astro"

const navItems = [
  {
    title: "Experience",
    label: "experience",
    url: "#experiencia",
  },
  {
    title: "Projects",
    label: "proyectos",
    url: "#projects",
  },
  {
    title: "About",
    label: "about-me",
    url: "#about-me",
  },
  {
    title: "Contact",
    label: "contact",
    url: "mailto:facurossi33@gmail.com",
  },
]
---

<header
  class="fixed top-0 z-10 flex items-center justify-center w-full mx-auto mt-2"
>
  <nav
    class="flex px-3 text-sm font-medium rounded-full text-gray-600 dark:text-gray-200 justify-center items-center"
  >
    {
      navItems.map((link) => (
        <a
          class="relative block px-2 py-2 transition hover:text-blue-500 dark:hover:text-blue-500"
          aria-label={link.label}
          href={link.url}
        >
          {link.title}
        </a>
      ))
    }
    <ThemeToggle />
  </nav>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section")
    const navItems = document.querySelectorAll("header nav a")

    const callback = (entries: IntersectionObserverEntry[]) => {
  entries.forEach(entry => {
    navItems.forEach(item => {
      if (item.getAttribute("aria-label") === entry.target.id) {
        item.classList.toggle("nav-highlight", entry.isIntersecting)
      }
    })
  })
}

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    })

    sections.forEach((section) => {
      observer.observe(section)
    })

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect()
      } else {
        sections.forEach((section) => {
          observer.observe(section)
        })
      }
    }
  })
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
    position: relative;
    backdrop-filter: blur(12px);
    @apply dark:bg-gray-800/90 bg-white/50;
  }

  .nav a {
    position: relative;
    padding: 0.5rem 1.2rem;
    margin: 0 0.25rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    border-radius: 0.5rem;
  }

  .nav a:not(.text-blue-500):hover {
    background: linear-gradient(45deg, rgba(99, 102, 241, 0.05), rgba(165, 180, 252, 0.05));
  }

  .nav a.text-blue-500 {
    color: #3b82f6;
    background: linear-gradient(45deg, rgba(59, 130, 246, 0.1), rgba(139, 92, 246, 0.1));
    box-shadow: 0 2px 8px -2px rgba(59, 130, 246, 0.2);
  }

  .nav a.text-blue-500:hover {
    background: linear-gradient(45deg, rgba(59, 130, 246, 0.15), rgba(139, 92, 246, 0.15));
    transform: translateY(-1px);
  }

  .nav a.text-blue-500::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 60%;
    height: 2px;
    background: linear-gradient(90deg, #3b82f6, #8b5cf6);
    border-radius: 2px;
    animation: underline-grow 0.3s ease-out;
  }

  .nav a.text-blue-500::before {
    content: '';
    position: absolute;
    top: 50%;
    right: -8px;
    width: 6px;
    height: 6px;
    background: #3b82f6;
    border-radius: 50%;
    transform: translateY(-50%);
    animation: pulse-dot 1.5s infinite;
  }

  .nav-highlight {
  color: #3b82f6;
  font-weight: 600;
}

  @keyframes pulse-dot {
    0%, 100% {
      transform: translateY(-50%) scale(1);
      opacity: 1;
    }
    50% {
      transform: translateY(-50%) scale(1.4);
      opacity: 0.5;
    }
  }

  @keyframes underline-grow {
    from {
      width: 0;
      opacity: 0;
    }
    to {
      width: 60%;
      opacity: 1;
    }
  }

  @keyframes nav-shadown {
    0% {
      @apply dark:bg-slate-900/0 bg-slate-100/0;
    }
    to {
      @apply shadow-lg ring-1 backdrop-blur ring-white/10;
    }
  }
</style>