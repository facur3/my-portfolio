---
import ThemeToggle from "./ThemeToggle.astro"

const navItems = [
  {
    title: "Experience",
    label: "experience",
    url: "#experience",
  },
  {
    title: "Projects",
    label: "projects",
    url: "#projects",
  },
  {
    title: "About",
    label: "about-me",
    url: "#about-me",
  },
  {
    title: "Contact",
    label: "contact",
    url: "#contact",
  },
]
---
<header class="fixed top-0 z-10 flex items-center justify-center w-full mx-auto mt-2">
  <nav class="flex px-3 text-sm font-medium rounded-full text-gray-600 dark:text-gray-200 justify-center items-center">
    {navItems.map(link => (
      <a
        class="relative block px-2 py-2 transition hover:text-blue-500 dark:hover:text-blue-500"
        aria-label={link.label}
        href={link.url}
      >
        {link.title}
      </a>
    ))}
    <ThemeToggle />
  </nav>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section");
    const navLinks = document.querySelectorAll("header nav a");

    const callback = (entries: IntersectionObserverEntry[]) => {
      entries.forEach(entry => {
        const link = document.querySelector(`header nav a[aria-label="${entry.target.id}"]`);
        if (link) {
          link.classList.toggle("text-blue-500", entry.isIntersecting);
        }
      });
    };

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    });

    sections.forEach(section => observer.observe(section));

    // --- Hide header on scroll ---
    const header = document.querySelector("header");
    if (!header) return;

    let lastScrollY = window.scrollY;

    const handleScroll = () => {
      if (window.scrollY > lastScrollY && window.scrollY > 100) {
        // scrolling down
        header.classList.add('header-hidden');
      } else {
        // scrolling up
        header.classList.remove('header-hidden');
      }
      lastScrollY = window.scrollY;
    };

    window.addEventListener('scroll', handleScroll, { passive: true });

    document.addEventListener("astro:before-swap", () => {
      observer.disconnect();
      window.removeEventListener('scroll', handleScroll);
    });
  });
</script>

<style>
  header {
    transition: transform 0.3s ease-out;
  }
  header.header-hidden {
    transform: translateY(-110%);
  }
  nav {
    position: relative;
    backdrop-filter: blur(12px);
    @apply dark:bg-gray-800/90 bg-white/50 shadow-lg ring-1 ring-white/10;
  }

  .nav a {
    position: relative;
    padding: 0.5rem 1.2rem;
    margin: 0 0.25rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    border-radius: 0.5rem;
  }

  .nav a:not(.text-blue-500):hover {
    background: linear-gradient(45deg, rgba(99, 102, 241, 0.05), rgba(165, 180, 252, 0.05));
  }

  .nav a.text-blue-500 {
    color: #3b82f6;
    background: linear-gradient(45deg, rgba(59, 130, 246, 0.1), rgba(139, 92, 246, 0.1));
    box-shadow: 0 2px 8px -2px rgba(59, 130, 246, 0.2);
  }

  .nav a.text-blue-500:hover {
    background: linear-gradient(45deg, rgba(59, 130, 246, 0.15), rgba(139, 92, 246, 0.15));
    transform: translateY(-1px);
  }

  .nav a.text-blue-500::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 60%;
    height: 2px;
    background: linear-gradient(90deg, #3b82f6, #8b5cf6);
    border-radius: 2px;
    animation: underline-grow 0.3s ease-out;
  }

  .nav a.text-blue-500::before {
    content: '';
    position: absolute;
    top: 50%;
    right: -8px;
    width: 6px;
    height: 6px;
    background: #3b82f6;
    border-radius: 50%;
    transform: translateY(-50%);
  }

  @keyframes underline-grow {
    from {
      width: 0;
      opacity: 0;
    }
    to {
      width: 60%;
      opacity: 1;
    }
  }

  @keyframes nav-shadown {
    0% {
      transform: translateY(0) scale(1);
    }
    100% {
      transform: translateY(2px) scale(1.02);
    }
  }
</style>